{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/utils.js","../src/init.js","../src/globalApi.js","../src/index.js"],"sourcesContent":["// 我们重写数组中的部分方法\n\nimport { observe } from \"./index\";\n\nconst originArrayProto = Array.prototype; // 获取数组中的原型\n\n// newArrayProto.__proto__ = originArrayProto\nexport let newArrayProto = Object.create(originArrayProto);\n\n// 找到所有的变异方法：会改变原数组\nconst arrayMethods = [\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"splice\",\n  \"sort\",\n  \"reverse\",\n];\n\narrayMethods.forEach((method) => {\n  // 这里重写数组的方法\n  newArrayProto[method] = function (...args) {\n    // 内部调用原来的方法，函数的劫持，切片编程\n    const result = originArrayProto[method].call(this, ...args);\n    console.log(\"方法被调用了, method: \", method);\n    console.log(this, \"arrayMethods--------------\");\n    const ob = this.__ob__;\n    // 我们需要对新增的数据再次进行劫持\n    let inserted;\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = args;\n        break;\n      case \"splice\":\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    // 对插入的数据进行劫持\n    if (inserted) {\n      ob.observeArray(inserted);\n    }\n\n    // 走到这里进行通知更新\n    ob.dep.notify(); // 数组变化了通知对应的 watcher 进行更新\n    return result;\n  };\n});\n","let uid = 0\n\nclass Dep {\n  constructor() {\n    this.id = uid++ // 属性的 dep 要收集 watcher\n    this.subs = [] // 这里面存放着当前属性对应的 watcher\n  }\n\n  depend() {\n    // 这里我们不需要放置重复的 watcher，而且这里还只是一个单向的关系：dep->watcher\n    // 其实 还需要双向：watcher -> dep: 比如组件卸载时候，需要删除对应的渲染函数\n    // 这里本来可以直接塞入，但是为了双向记录并且去重，所以不能简单的 push，需要绕一圈\n    // this.subs.push(Dep.target); ----> 简单这样写，不能去重\n    if (Dep.target) {\n      Dep.target.addDep(this) // 让 watcher 记住 dep\n    }\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher)\n  }\n\n  notify() {\n    this.subs.forEach((watcher) => {\n      watcher.update()\n    })\n  }\n}\n\nDep.target = null\n\nlet stack = []\nexport function pushTarget(watcher) {\n  stack.push(watcher)\n  Dep.target = watcher\n}\n\nexport function popTarget(watcher) {\n  stack.pop()\n  Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep\n","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\nclass Observer {\n  constructor(data) {\n    // 给每个对象都增加收集功能\n    this.dep = new Dep();\n\n    // Object.defineProperty 只能劫持已经存在的属性，新增、删除的都无法\n    // vue2中为此还专门写了一个api: $set $delete\n    // data.__ob__ = this; // 这里直接赋值会导致死循环，一直加__ob__\n    Object.defineProperty(data, \"__ob__\", {\n      value: this,\n      configurable: false, // 将 __ob__ 变为不可枚举\n    });\n    if (Array.isArray(data)) {\n      // 我们可以重写数组中的方法: 7个变异方法，它们可以修改原数组\n\n      data.__proto__ = newArrayProto; // 这里需要保留数组原有弹性，并且可以重写部分方法\n      // 数组中还有引用类型属性的数据：\n      this.observeArray(data);\n    } else {\n      this.walk(data);\n    }\n  }\n\n  observeArray(data) {\n    data.forEach((item) => {\n      observe(item);\n    });\n  }\n\n  walk(data) {\n    // 循环data对象，对属性依次进行劫持\n\n    // “重新定义”属性：性能就有减弱了\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\n  }\n}\n\n// 深层次嵌套会递归，递归多了性能差，不存在的属性监控不到，存在的属性又重写方法\n// vue3 采用了 proxy，省略了这些过程\nfunction dependArray(arr) {\n  for (let i = 0; i < arr.length; i++) {\n    let current = arr[i];\n    // 如果 current 是一个数组中的字符串，就没有__ob__\n    if (current.__ob__) {\n      current.__ob__.dep.depend();\n    }\n    if (Array.isArray(current)) {\n      dependArray(current);\n    }\n  }\n}\n\n// 属性劫持\nexport function defineReactive(target, key, value) {\n  // 如果还是对象，就需要再次进行劫持\n  const childOb = observe(value); // childOb上就有 dep 属性，用来收集依赖\n  // 这里使用了闭包\n  let dep = new Dep(); // 每一个属性都有一个 dep\n  Object.defineProperty(target, key, {\n    configurable: true,\n    get() {\n      console.log(\"用户取值了,key: \", key, value);\n      // 取值的时候,会执行 get\n      dep.depend();\n      if (childOb) {\n        childOb.dep.depend(); // 让数组和对象本身也实现依赖收集，以前针对的是属性，现在增加对象本身\n        // 这里还要做判断，如果当前值是数组\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value;\n    },\n    set(newValue) {\n      console.log(\"用户设置值了,key: \", key, newValue);\n      // 修改的时候，会执行 set\n      if (newValue !== value) {\n        // 如果设置的是对象，也要进行劫持响应化处理\n        observe(newValue);\n        value = newValue;\n        // 通知相关依赖更新\n        dep.notify();\n      }\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n  if (typeof data !== \"object\" || data == null) {\n    return; // 只对对象进行劫持\n  }\n  // 如果一个对象被劫持过了，那就不需要在被劫持了\n  // 要判断一个对象是否被劫持过，可以增加一个实例，用实例来判断是否被劫持过\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  }\n  return new Observer(data);\n}\n","import Dep, { popTarget, pushTarget } from './dep.js'\nlet id = 0\n\n// 1. 当我们创建渲染 watcher 的时候我们会把当前的渲染 watcher 放到 Dep.target上\n// 2. 调用 _render() 会取值，就会走到 get 上\n\n// 每个属性有一个 dep（属性就是被观察者），watcher 就是观察者（属性更新了通知观察者来更新）=> 观察者模式\n\nexport class Watcher {\n  // 不同组件有不同的 watcher，目前只有一个渲染根实例的\n  constructor(vm, exprOrFn, options = {}, cb) {\n    this.id = id++\n    this.renderWatcher = options // 是否是一个渲染 watcher\n    if (typeof exprOrFn === 'string') {\n      this.getter = function () {\n        return vm[exprOrFn] // 去实例上取值\n      }\n    } else {\n      this.getter = exprOrFn // getter 意味着调用这个函数可以发生取值操作\n    }\n\n    this.lazy = options.lazy // 是否懒惰\n    this.dirty = this.lazy\n    this.cb = cb\n    this.user = options.user // 标识，是否是用户自己的 watcher\n\n    this.depsIdSet = new Set()\n    this.vm = vm\n    this.deps = [] //用于记录对应的 dep，后续我们实现计算属性和一些清理工作需要用到\n    // 初始化时候调用一次，保证 vm 上的属性取值触发\n\n    if (this.lazy) {\n      // 如果是懒惰的，默认不取值\n    } else {\n      this.value = this.get()\n    }\n  }\n\n  evaluate() {\n    this.value = this.get() // 获取到用户函数的返回值\n    this.dirty = false // 并且还要标识为脏\n  }\n\n  get() {\n    // Dep.target = this;\n    // this.getter(); // 这里会在 vm 上取值\n    // Dep.target = null; // 渲染完毕后就清空\n    // -------------\n    // 这里改为：维护为一个队列，\n\n    pushTarget(this)\n    const value = this.getter.call(this.vm)\n    popTarget()\n    return value\n  }\n\n  addDep(dep) {\n    // 一个组件对应着多个属性，重复的属性也不用记录\n    const depId = dep.id\n    if (!this.depsIdSet.has(depId)) {\n      this.deps.push(dep)\n      this.depsIdSet.add(depId)\n      // watcher 已经记住了 dep 了而且已经去重了，此时让 dep 也记住 watcher\n      dep.addSub(this)\n    }\n  }\n\n  update() {\n    // this.get(); // 重新更新渲染\n    // 下面开始做异步更新操作，那么就不能立即执行，我们用一个队列把函数暂存起啦\n    if (this.lazy) {\n      // 如果是计算属性. 依赖的值发生了变化，就标识计算属性是脏值了\n      this.dirty = true\n    } else {\n      queueWatcher(this) // 把当前的 watcher 进行暂存\n    }\n  }\n\n  run() {\n    let oldValue = this.value\n    const newValue = this.get()\n    if (this.user) {\n      // 如果是当前 watcher\n      this.cb.call(this.vm, newValue, oldValue)\n    }\n  }\n\n  depend() {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend() // 让计算属性 watcher 也收集渲染 watcher\n    }\n  }\n}\n\nlet queue = []\nlet has = {}\nlet pending = false // 防抖\nfunction queueWatcher(watcher) {\n  const watcherId = watcher.id\n  if (!has[watcherId]) {\n    // 如果当前队列中没有当前 watcherId 就存入\n    queue.push(watcher)\n    has[watcherId] = true\n    // 不管我们的 update 执行多少次，但是最终只执行一次刷新操作\n    if (!pending) {\n      nextTick(flushSchedulerQueue)\n      pending = true\n    }\n  }\n}\n\nfunction flushSchedulerQueue() {\n  console.log('这里执行重新渲染操作------------------')\n  const newQueue = queue.slice()\n  queue.length = 0\n  queue = []\n  has = {}\n  pending = false\n  for (let i = 0; i < newQueue.length; i++) {\n    newQueue[i].run() // 在刷新的国策还给你中可能还有还有新的 watcher，重新翻到 queue 中\n  }\n}\n\nlet callbacks = []\nlet waiting = false\nfunction flushCallbacks() {\n  const cbs = callbacks.slice()\n  waiting = false\n  callbacks = []\n  cbs.forEach((callback) => callback()) // 按照顺序执行\n}\n\n// nextTick 中没有直接使用某个 api，而是采用了优雅降级的方式\n// 内部先采用的是 promise（IE 不兼容）\n// 然后采用 MutationObserver（h5的 api）\n// 然后在考虑 IE 专享 setIMediate\n// 然后再使用 setTimeout\n\nlet timerFunction\nif (Promise) {\n  timerFunction = () => {\n    Promise.resolve().then(flushCallbacks)\n  }\n} else if (MutationObserver) {\n  timerFunction = () => {\n    let observer = new MutationObserver(flushCallbacks)\n    // 这里传入的回调是异步执行的\n    const textNode = document.createTextNode(1)\n    observer.observe(textNode, {\n      characterData: true,\n    })\n    timerFunction = () => {\n      textNode.textContent = 2\n    }\n  }\n} else if (setImmediate) {\n  timerFunction = () => {\n    setImmediate(flushCallbacks)\n  }\n} else {\n  timerFunction = () => {\n    setTimeout(flushCallbacks)\n  }\n}\n\nexport function nextTick(cb) {\n  callbacks.push(cb) // 维护 nextTick中的 callback\n  if (!waiting) {\n    timerFunction()\n    // vue3已经不兼容 ie 直接使用 promise\n    // Promise.resolve().then(flushCallbacks); // vue3的写法\n    waiting = true\n  }\n}\n\n\n// 需要给可以个属性增加一个 dep，目的就是收集 watcher\n// 一个组价视图中有多个属性（n 个属性会对应一个视图)）,n 个 dep 对应一个 watcher\n// 1 个属性对应多个视图, 1个 dep 对应多个 watcher\n// 多对多的关系\n\n\n","import { observe } from './observe/index'\nimport { Watcher } from './observe/watcher'\nimport Dep from './observe/dep'\n\nexport function initState(vm) {\n  const opts = vm.$options\n\n  if (opts.data) {\n    initData(vm)\n  }\n\n  if (opts.computed) {\n    initComputed(vm)\n  }\n\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initWatch(vm) {\n  const watch = vm.$options.watch\n  for (let key in watch) {\n    // 字符串、数组、函数\n    const handler = watch[key]\n    if (Array.isArray(handler)) {\n      // 如果是数组，我就去循环创建\n      handler.forEach((handler) => {\n        createWatcher(vm, key, handler)\n      })\n    } else {\n      createWatcher(vm, key, handler)\n    }\n  }\n}\n\nfunction createWatcher(vm, key, handler) {\n  // vm.$watch()\n  if (typeof handler === 'string') {\n    handler = vm[handler]\n  }\n\n  return vm.$watch(key, handler)\n}\n\nfunction initComputed(vm) {\n  const computed = vm.$options.computed\n  const watchers = (vm._computedWatchers = {}) // 将计算属性 watchers 保存到 vm 上\n  for (let key in computed) {\n    let computedValue = computed[key]\n\n    // 我们需要监控，计算属性中 get 的变化\n    const fn =\n      typeof computedValue === 'function' ? computedValue : computedValue.get\n    // 如果直接 watcher 就会默认执行 fn\n    // 将属性和 watcher 对应起来\n    watchers[key] = new Watcher(vm, fn, {\n      lazy: true, // 懒惰 watcher\n    })\n    defineComputed(vm, key, computedValue)\n  }\n}\n\nfunction defineComputed(target, key, computedValue) {\n  // 有可能是对象，有可能是函数\n  const getter =\n    typeof computedValue === 'function' ? computedValue : computedValue.get\n  const setter = computedValue.set || (() => {})\n\n  // 可以通过实例拿到对应的属性\n  Object.defineProperty(target, key, {\n    get: createComputedGetter(key),\n    set: setter,\n  })\n}\n\n// 计算属性根本不会收集依赖，只会让自己的依赖属性去收集依赖\nfunction createComputedGetter(key) {\n  // 我们需要检测是否要执行这个 getter\n  return function () {\n    const watcher = this._computedWatchers[key] // 获取到对应属性的 watcher\n    if (watcher.dirty) {\n      // 如果是脏的，就去执行用户传入的函数\n      watcher.evaluate() // 求值后，dirty 变为了 false，下次就不会在求值了\n    }\n    // 计算属性出栈后，还有渲染 watcher，我应该让 watcher 里面的属性也去收集上层的 watcher\n    if (Dep.target) {\n      watcher.depend()\n    }\n    return watcher.value\n  }\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data // data 可能是函数和对象\n\n  data = typeof data === 'function' ? data.call(this) : data\n\n  vm._data = data\n  // 对数据进行接触，vue2中采用了一个api： defineProperty\n  observe(data)\n\n  // 将 vm._data 用 vm 来代理就可以了\n  for (const key in data) {\n    proxy(vm, '_data', key)\n  }\n}\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key]\n    },\n    set(val) {\n      vm[target][key] = val\n    },\n  })\n}\n","const unicodeRegExp =\n  /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n// unicodeRegExp.source 用于拿到正则表达式 unicodeRegExp 的字符串。\n\n// attribute 匹配属性\n// 第一个分组就是属性的key value就是分组3分组4分组5\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst dynamicArgAttribute =\n  /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n\n//他匹配到的分组是一个标签名 </xxx 最终匹配到的分组是开始标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n\nconst startTagClose = /^\\s*(\\/?)>/;\n\n// 匹配到的是 </xxx 最终匹配到的分组是结束标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\nconst doctype = /^<!DOCTYPE [^>]+>/i;\nconst comment = /^<!\\--/;\nconst conditionalComment = /^<!\\[/;\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport const ELEMENT_TYPE = 1;\nexport const TEXT_TYPE = 3;\n\nexport function parseHtml(html) {\n  const stack = []; // 用于存放元素的\n  let currentParent; // 指向的是栈中的最后一个\n  let root; // 根节点\n\n  // 最终需要转换成一颗抽象语法树\n\n  function createAstElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      attrs: attrs,\n      children: [],\n      parent: null,\n    };\n  }\n\n  function start(tag, attrs) {\n    // 创造一个AST 节点\n    let node = createAstElement(tag, attrs);\n    if (!root) {\n      // 看一下是否是空树，如果为空则当前是树的根节点\n      root = node;\n    }\n    // 如果当前父节点有值\n    if (currentParent) {\n      node.parent = currentParent;\n      currentParent.children.push(node);\n    }\n    stack.push(node);\n    // currentParent 为栈中的最后一个\n    currentParent = node;\n  }\n\n  function end(tag) {\n    let node = stack.pop(); // 弹出最后一个， 校验标签是否合法\n    if (node.tag !== tag) {\n      console.log(tag, node);\n      console.error(\"标签开始和结束不一致\");\n    }\n    currentParent = stack[stack.length - 1];\n  }\n\n  function chars(text) {\n    text = text.replace(/\\s/g, \"\"); // 删除空格\n    if (text) {\n      // 把文本直接放到当前指向的节点中\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent,\n      });\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n); // 返回该字符串从起始索引到结束索引（不包括）的部分\n  }\n\n  function parseStartTag() {\n    const start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      };\n      advance(start[0].length);\n      // 如果不是开始标签的结束，就一直匹配下去\n      let attr, end;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length);\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true,\n        });\n      }\n      if (end) {\n        advance(end[0].length); //\n      }\n\n      return match;\n    }\n    // 不是开始标签\n    return false;\n  }\n\n  // html 最开始肯定是一个 <\n  while (html) {\n    let textEnd = html.indexOf(\"<\"); // 如果 indexOf 中的索引是0，则说明是个标签\n    // 如果 textEnd 为0，则说明是一个开始标签，或者结束标签\n    // 如果 textEnd >0 说明是文本开始的位置\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        // 解析到了开始标签\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n      let endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue;\n      }\n    }\n    if (textEnd > 0) {\n      // 说明有文本\n      let text = html.substring(0, textEnd); // 截取出来文本内容\n      if (text) {\n        advance(text.length); // 解析到了文本\n        chars(text);\n      }\n    }\n  }\n  return root;\n}\n","import { defaultTagRE, ELEMENT_TYPE, parseHtml, TEXT_TYPE } from \"./parse\";\n\nfunction genProps(attrs) {\n  let str = \"\"; // {name, value}\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    let attr = attrs[i];\n    if (attr.name === \"style\") {\n      // color: 'red' => {color: 'red'}\n      let obj = {};\n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value.trim();\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}: ${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`; // 去掉最后一个，\n}\n\nfunction genChild(node) {\n  // 如果是文本、元素\n  if (node.type === ELEMENT_TYPE) {\n    // 是元素\n    return codegen(node);\n  } else if (node.type === TEXT_TYPE) {\n    // 是文本\n    const nodeText = node.text;\n    if (!defaultTagRE.test(nodeText)) {\n      // 是不是一个文本\n      return `_v(${JSON.stringify(nodeText)})`;\n    }\n    // {{name}} hello {{age}}\n    // 需要转变为\n    // _v( _s(name) + \"hello\" + _s(age))\n    // _c是创建元素的，_v是创建文本的，_s是 JSON.stringify\n    let tokens = [];\n    let match;\n    defaultTagRE.lastIndex = 0;\n    let lastIndex = 0;\n    while ((match = defaultTagRE.exec(nodeText))) {\n      const index = match.index; // 匹配的位置\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(nodeText.slice(lastIndex, index)));\n      }\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n    // 如果匹配完，后面还有文本\n    if (lastIndex < nodeText.length) {\n      tokens.push(JSON.stringify(nodeText.slice(lastIndex, nodeText.length)));\n    }\n    return `_v(${tokens.join(\"+\")})`;\n  }\n}\n\nfunction genChildren(children) {\n  return children.map((child) => genChild(child)).join(\",\");\n}\n\nfunction codegen(ast) {\n  const children = genChildren(ast.children);\n  let code = `_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"}, ${ast.children.length ? `${children}` : \"\"})`;\n  return code;\n}\n\nexport function compileToFunction(template) {\n  // 1. 将 template 转换成 ast语法树木\n  let ast = parseHtml(template);\n  // 2. 生成 render 方法，render方法的返回结果是虚拟DOM\n  let code = codegen(ast);\n  // 模板引擎的实现原理就是：with + new Function\n  code = `with(this){return ${code}}`;\n  return new Function(code); // 根据代码生成 render 函数\n}\n","// 这个样子和ast一样吗？\n// ast 做的是语法层面的转换，它描述的是语法本身（可以描述 js css html）\n// 这里我们的虚拟 DOM 是描述的 DOM 元素，可以增加一些自定义属性(描述 dom 元素)\nfunction vNode(vm, tag, key, data, children, text) {\n  return {\n    tag,\n    data,\n    children,\n    text,\n    key,\n  };\n}\n\n// h() _c()\nexport function createElementVNode(vm, tag, props = {}, ...children) {\n  console.log(\"children\", children);\n  const key = props?.key;\n  delete props?.key;\n  return vNode(vm, tag, key, props, children);\n}\n\n// _v()\nexport function createTextVNode(vm, text) {\n  return vNode(vm, undefined, undefined, undefined, undefined, text);\n}\n","import { createElementVNode, createTextVNode } from './vdom/index'\nimport { Watcher } from './observe/watcher'\n\nexport function mountComponent(vm, el) {\n  vm.$el = el\n  // 1. 调用 render 方法产生虚拟节点 虚拟 DOM\n  // vm._update(vm._render()); // vm.$options.render() 虚拟节点\n\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  new Watcher(vm, updateComponent, true) // true 用于标识这是一个渲染 watcher\n\n  // 2. 根据虚拟 DOM 产生真是 DOM\n  // 3. 插入到 el 元素中\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._c = function () {\n    console.log('调用了 _c')\n    return createElementVNode(this, ...arguments)\n  }\n\n  Vue.prototype._v = function () {\n    console.log('调用了 _v')\n    return createTextVNode(this, ...arguments)\n  }\n\n  Vue.prototype._s = function (value) {\n    console.log('调用了 _s')\n    if (typeof value !== 'object') {\n      return value\n    }\n    return JSON.stringify(value)\n  }\n\n  Vue.prototype._update = function (vNode) {\n    console.log('_update')\n    const vm = this\n    const el = vm.$el\n    // patch 既有初始化的功能，又有更新的公共功能\n    // 创建或者更新完毕后，返回的节点赋值给实例上，更新实例上的节点\n    vm.$el = patch(el, vNode)\n  }\n\n  Vue.prototype._render = function () {\n    console.log('_render')\n    const vm = this\n    return vm.$options.render.call(vm) // 通过 ast 语法转义后生成的 render 方法\n  }\n}\n\nfunction patchProps(el, props) {\n  for (const key in props) {\n    if (key === 'style') {\n      for (const styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n\nfunction createElm(vNode) {\n  const { tag, children = [], data, text } = vNode\n  if (typeof tag === 'string') {\n    // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n    vNode.el = document.createElement(tag)\n\n    // 更新属性\n    patchProps(vNode.el, data)\n    children.forEach((child) => {\n      const childElm = createElm(child)\n      vNode.el.appendChild(childElm)\n    })\n  } else {\n    vNode.el = document.createTextNode(text)\n  }\n  return vNode.el\n}\n\nfunction patch(oldVNode, vNode) {\n  // 写的是初渲染流程\n  const isRealElement = oldVNode.nodeType\n  if (isRealElement) {\n    console.log('这里进行渲染了')\n    const elm = oldVNode // 获取真实元素\n    const parentElm = elm.parentNode // 获取父元素\n    const newElm = createElm(vNode)\n    parentElm.insertBefore(newElm, elm.nextSibling)\n    // 移除老节点\n    parentElm.removeChild(elm)\n    return newElm\n  } else {\n    console.log('TODO diff 算法')\n  }\n}\n\nexport function callHook(vm, hook) {\n  const handlers = vm.$options[hook]\n  if (handlers) {\n    handlers.forEach((handler) => {\n      handler.call(vm)\n    })\n  }\n}\n","const strats = {}\nconst LIFE_CYCLE = ['beforeCreate', 'created', 'beforeMount']\nLIFE_CYCLE.forEach((cycle) => {\n  // {} {created: function(){} } => {created: [fn]}\n  // {created: [fn]} {created: function(){}} => {created: [fn, fn]}\n  strats[cycle] = function (p, c) {\n    if (c) {\n      // 如果儿子有，并且父亲有，让父亲和儿子拼在一起\n      if (p) {\n        return p.concat(c)\n      } else {\n        // 对于第一次，只有儿子有，父亲没有, 则将儿子包装成对象\n        return [c]\n      }\n    } else {\n      // 如果儿子没有，则用父亲即可\n      return p\n    }\n  }\n})\nexport function mergeOptions(parent, child) {\n  console.log(parent, child, 'parent, child')\n  function mergeField(key) {\n    // 为了避免多次 if，可以采用策略模式\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      // 如果不在策略中\n      // 优先采用 child 的，再采用 parent 的\n      options[key] = child[key] || parent[key]\n    }\n  }\n  const options = {}\n  for (const key in parent) {\n    mergeField(key)\n  }\n  for (const key in child) {\n    // 在这里只合并child 中不存在于 parent 的属性\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  return options\n}\n","import { initState } from './state'\nimport { compileToFunction } from './compiler/index'\nimport { callHook, mountComponent } from './lifecycle'\nimport { mergeOptions } from './utils'\n\nexport function initMixin(Vue) {\n  // 就是给 vue 增加 init 方法的\n  Vue.prototype._init = function (options) {\n    // 用户初始化操作\n    // vue vm.$options 就是获取用户的配置项\n\n    const vm = this\n\n    // 我们定义的全局指令和过滤器等等等，都会挂在实例上\n    vm.$options = mergeOptions(this.constructor.options, options) // 将用户的选项挂在在实例上\n    console.log(vm.$options, 'vm.$options')\n\n    // 初始化之前， 调用 hooks 上的 beforeCreate\n    callHook(vm, 'beforeCreate')\n\n    // 初始化状态\n    initState(vm)\n\n    // 初始化之后， 调用 hooks 上的 created\n    callHook(vm, 'created')\n\n    if (options.el) {\n      vm.$mount(options.el) // 实现数据的挂在\n    }\n  }\n\n  // 挂载\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    el = document.querySelector(el)\n    const ops = vm.$options\n    if (!ops.render) {\n      let template\n      // 先进行查找是否有 render 函数，\n      // 没有 render 函数看一下是否写了 template 没有写 template 就用外部的 template\n      if (!ops.template && el) {\n        // 没有写模板，但是写了 el\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = ops.template\n        }\n      }\n      // console.log(template);\n      if (template) {\n        // 这里需要对模板进行编译\n        ops.render = compileToFunction(template) // jsx 最终也会被被编译成 h('xxx')\n      }\n    }\n    // 最终可以获取到 render 方法\n    // console.log(ops.render);\n    mountComponent(vm, el) // 组件的挂载\n  }\n}\n\n// script 标签使用的是 vue.global.js 这个编译过程是在浏览器中进行的\n// runtime 是不包含模板编译的，整个编译打包的过程是通过 loader 来转义 .vue 文件的，\n// 用runtime时候不能使用 template\n","import { mergeOptions } from './utils'\n\nexport function initGlobalApi(Vue) {\n  // 静态方法\n  Vue.options = {}\n\n  Vue.mixin = function (mixin) {\n    // 我们期望将用户的选项和全局的 options 进行合并\n    this.options = mergeOptions(this.options, mixin)\n    return this\n  }\n}\n","import { initMixin } from './init'\nimport { initLifeCycle } from './lifecycle'\nimport { nextTick, Watcher } from './observe/watcher'\nimport { initGlobalApi } from './globalApi'\n\nfunction Vue(options) {\n  // options 就是用户的选项\n  this._init(options)\n}\n\nVue.prototype.$nextTick = nextTick\n\ninitMixin(Vue)\ninitLifeCycle(Vue)\ninitGlobalApi(Vue)\n\n// 最终调用的都是这个方法\nVue.prototype.$watch = function (exprOrFn, cb) {\n  // 参数：{deep: true, immediate: true} // 先不处理了\n  // console.log(exprOrFn, cb)\n  // exprOrFn 可能是字符串，有可能是函数 firstName ,() => vm.firstName\n  // new Watcher(this)\n\n  // firstName的值变化了，直接执行 cb\n  new Watcher(this, exprOrFn, { user: true }, cb)\n}\n\nexport default Vue\n"],"names":["originArrayProto","Array","prototype","newArrayProto","Object","create","arrayMethods","forEach","method","_originArrayProto$met","_len","arguments","length","args","_key","result","call","apply","concat","console","log","ob","__ob__","inserted","slice","observeArray","dep","notify","uid","Dep","_classCallCheck","id","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","configurable","isArray","__proto__","walk","item","observe","keys","defineReactive","dependArray","arr","i","current","childOb","get","set","newValue","_typeof","Watcher","vm","exprOrFn","options","undefined","cb","renderWatcher","getter","lazy","dirty","user","depsIdSet","Set","deps","evaluate","depId","has","add","queueWatcher","run","oldValue","queue","pending","watcherId","nextTick","flushSchedulerQueue","newQueue","callbacks","waiting","flushCallbacks","cbs","callback","timerFunction","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","_loop","handler","createWatcher","$watch","watchers","_computedWatchers","computedValue","fn","defineComputed","setter","createComputedGetter","_data","proxy","val","unicodeRegExp","attribute","ncname","source","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","defaultTagRE","ELEMENT_TYPE","TEXT_TYPE","parseHtml","html","currentParent","root","createAstElement","tag","attrs","type","children","parent","start","node","end","error","chars","text","replace","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","obj","split","_item$split","_item$split2","_slicedToArray","trim","JSON","stringify","len","genChild","codegen","nodeText","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","Function","vNode","createElementVNode","props","createTextVNode","mountComponent","el","$el","updateComponent","_update","_render","initLifeCycle","Vue","_c","_v","_s","patch","render","patchProps","styleName","style","setAttribute","createElm","_vNode$children","createElement","childElm","appendChild","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","callHook","hook","handlers","strats","LIFE_CYCLE","cycle","p","c","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","initGlobalApi","mixin","$nextTick"],"mappings":"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"}