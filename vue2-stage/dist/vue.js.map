{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们重写数组中的部分方法\n\nimport { observe } from \"./index\";\n\nconst originArrayProto = Array.prototype; // 获取数组中的原型\n\n// newArrayProto.__proto__ = originArrayProto\nexport let newArrayProto = Object.create(originArrayProto);\n\n// 找到所有的变异方法：会改变原数组\nconst arrayMethods = [\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"splice\",\n  \"sort\",\n  \"reverse\",\n];\n\narrayMethods.forEach((method) => {\n  // 这里重写数组的方法\n  newArrayProto[method] = function (...args) {\n    // 内部调用原来的方法，函数的劫持，切片编程\n    const result = originArrayProto[method].call(this, ...args);\n    console.log(\"方法被调用了, method: \", method);\n    // 我们需要对新增的数据再次进行劫持\n    let inserted;\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = args;\n        break;\n      case \"splice\":\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    // 对插入的数据进行劫持\n    observe(inserted);\n    return result;\n  };\n});\n","import { newArrayProto } from \"./array\";\n\nclass Observer {\n  constructor(data) {\n    // Object.defineProperty 只能劫持已经存在的属性，新增、删除的都无法\n    // vue2中为此还专门写了一个api: $set $delete\n    // data.__ob__ = this; // 这里直接赋值会导致死循环，一直加__ob__\n    Object.defineProperty(data, \"__ob__\", {\n      value: this,\n      configurable: false, // 将 __ob__ 变为不可枚举\n    });\n    if (Array.isArray(data)) {\n      // 我们可以重写数组中的方法: 7个变异方法，它们可以修改原数组\n\n      data.__proto__ = newArrayProto; // 这里需要保留数组原有弹性，并且可以重写部分方法\n      // 数组中还有引用类型属性的数据：\n      this.observeArray(data);\n    } else {\n      this.walk(data);\n    }\n  }\n\n  observeArray(data) {\n    data.forEach((item) => {\n      observe(item);\n    });\n  }\n\n  walk(data) {\n    // 循环data对象，对属性依次进行劫持\n\n    // “重新定义”属性：性能就有减弱了\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\n  }\n}\n\n// 属性劫持\nexport function defineReactive(target, key, value) {\n  // 如果还是对象，就需要再次进行劫持\n  observe(value);\n  // 这里使用了闭包\n  Object.defineProperty(target, key, {\n    configurable: true,\n    get() {\n      console.log(\"用户取值了,key: \", key);\n      // 取值的时候,会执行 get\n      return value;\n    },\n    set(newValue) {\n      console.log(\"用户设置值了,key: \", key);\n      // 修改的时候，会执行 set\n      if (newValue !== value) {\n        // 如果设置的是对象，也要进行劫持响应化处理\n        observe(newValue);\n        value = newValue;\n      }\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n  if (typeof data !== \"object\" || data == null) {\n    return; // 只对对象进行劫持\n  }\n  // 如果一个对象被劫持过了，那就不需要在被劫持了\n  // 要判断一个对象是否被劫持过，可以增加一个实例，用实例来判断是否被劫持过\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  }\n  return new Observer(data);\n}\n","import { observe } from \"./observe/index\";\n\nexport function initState(vm) {\n  const opts = vm.$options;\n\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data; // data 可能是函数和对象\n\n  data = typeof data === \"function\" ? data.call(this) : data;\n\n  vm._data = data;\n  // 对数据进行接触，vue2中采用了一个api： defineProperty\n  observe(data);\n\n  // 将 vm._data 用 vm 来代理就可以了\n  for (const key in data) {\n    proxy(vm, \"_data\", key);\n  }\n}\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key];\n    },\n    set(val) {\n      vm[target][key] = val;\n    },\n  });\n}\n","const unicodeRegExp =\n  /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n// unicodeRegExp.source 用于拿到正则表达式 unicodeRegExp 的字符串。\n\n// attribute 匹配属性\n// 第一个分组就是属性的key value就是分组3分组4分组5\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst dynamicArgAttribute =\n  /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n\n//他匹配到的分组是一个标签名 </xxx 最终匹配到的分组是开始标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n\nconst startTagClose = /^\\s*(\\/?)>/;\n\n// 匹配到的是 </xxx 最终匹配到的分组是结束标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\nconst doctype = /^<!DOCTYPE [^>]+>/i;\nconst comment = /^<!\\--/;\nconst conditionalComment = /^<!\\[/;\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport const ELEMENT_TYPE = 1;\nexport const TEXT_TYPE = 3;\n\nexport function parseHtml(html) {\n  const stack = []; // 用于存放元素的\n  let currentParent; // 指向的是栈中的最后一个\n  let root; // 根节点\n\n  // 最终需要转换成一颗抽象语法树\n\n  function createAstElement(tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      attrs: attrs,\n      children: [],\n      parent: null,\n    };\n  }\n\n  function start(tag, attrs) {\n    // 创造一个AST 节点\n    let node = createAstElement(tag, attrs);\n    if (!root) {\n      // 看一下是否是空树，如果为空则当前是树的根节点\n      root = node;\n    }\n    // 如果当前父节点有值\n    if (currentParent) {\n      node.parent = currentParent;\n      currentParent.children.push(node);\n    }\n    stack.push(node);\n    // currentParent 为栈中的最后一个\n    currentParent = node;\n  }\n\n  function end(tag) {\n    let node = stack.pop(); // 弹出最后一个， 校验标签是否合法\n    if (node.tag !== tag) {\n      console.log(tag, node);\n      console.error(\"标签开始和结束不一致\");\n    }\n    currentParent = stack[stack.length - 1];\n  }\n\n  function chars(text) {\n    text = text.replace(/\\s/g, \"\"); // 删除空格\n    if (text) {\n      // 把文本直接放到当前指向的节点中\n      currentParent.children.push({\n        type: TEXT_TYPE,\n        text,\n        parent: currentParent,\n      });\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n); // 返回该字符串从起始索引到结束索引（不包括）的部分\n  }\n\n  function parseStartTag() {\n    const start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      };\n      advance(start[0].length);\n      // 如果不是开始标签的结束，就一直匹配下去\n      let attr, end;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length);\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true,\n        });\n      }\n      if (end) {\n        advance(end[0].length); //\n      }\n\n      return match;\n    }\n    // 不是开始标签\n    return false;\n  }\n\n  // html 最开始肯定是一个 <\n  while (html) {\n    let textEnd = html.indexOf(\"<\"); // 如果 indexOf 中的索引是0，则说明是个标签\n    // 如果 textEnd 为0，则说明是一个开始标签，或者结束标签\n    // 如果 textEnd >0 说明是文本开始的位置\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        // 解析到了开始标签\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n      let endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue;\n      }\n    }\n    if (textEnd > 0) {\n      // 说明有文本\n      let text = html.substring(0, textEnd); // 截取出来文本内容\n      if (text) {\n        advance(text.length); // 解析到了文本\n        chars(text);\n      }\n    }\n  }\n  return root;\n}\n","import { defaultTagRE, ELEMENT_TYPE, parseHtml, TEXT_TYPE } from \"./parse\";\n\nfunction genProps(attrs) {\n  let str = \"\"; // {name, value}\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    let attr = attrs[i];\n    if (attr.name === \"style\") {\n      // color: 'red' => {color: 'red'}\n      let obj = {};\n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value.trim();\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}: ${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`; // 去掉最后一个，\n}\n\nfunction genChild(node) {\n  // 如果是文本、元素\n  if (node.type === ELEMENT_TYPE) {\n    // 是元素\n    return codegen(node);\n  } else if (node.type === TEXT_TYPE) {\n    // 是文本\n    const nodeText = node.text;\n    if (!defaultTagRE.test(nodeText)) {\n      // 是不是一个文本\n      return `_v(${JSON.stringify(nodeText)})`;\n    }\n    // {{name}} hello {{age}}\n    // 需要转变为\n    // _v( _s(name) + \"hello\" + _s(age))\n    // _c是创建元素的，_v是创建文本的，_s是 JSON.stringify\n    let tokens = [];\n    let match;\n    defaultTagRE.lastIndex = 0;\n    let lastIndex = 0;\n    while ((match = defaultTagRE.exec(nodeText))) {\n      const index = match.index; // 匹配的位置\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(nodeText.slice(lastIndex, index)));\n      }\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n    // 如果匹配完，后面还有文本\n    if (lastIndex < nodeText.length) {\n      tokens.push(JSON.stringify(nodeText.slice(lastIndex, nodeText.length)));\n    }\n    return `_v(${tokens.join(\"+\")})`;\n  }\n}\n\nfunction genChildren(children) {\n  return children.map((child) => genChild(child)).join(\",\");\n}\n\nfunction codegen(ast) {\n  const children = genChildren(ast.children);\n  let code = `_c('${ast.tag}', ${ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"}, ${ast.children.length ? `${children}` : \"\"})`;\n  return code;\n}\n\nexport function compileToFunction(template) {\n  // 1. 将 template 转换成 ast语法树木\n  let ast = parseHtml(template);\n  // 2. 生成 render 方法，render方法的返回结果是虚拟DOM\n  let code = codegen(ast);\n  // 模板引擎的实现原理就是：with + new Function\n  code = `with(this){return ${code}}`;\n  return new Function(code); // 根据代码生成 render 函数\n}\n","// 这个样子和ast一样吗？\n// ast 做的是语法层面的转换，它描述的是语法本身（可以描述 js css html）\n// 这里我们的虚拟 DOM 是描述的 DOM 元素，可以增加一些自定义属性(描述 dom 元素)\nfunction vNode(vm, tag, key, data, children, text) {\n  return {\n    tag,\n    data,\n    children,\n    text,\n    key,\n  };\n}\n\n// h() _c()\nexport function createElementVNode(vm, tag, props = {}, ...children) {\n  console.log(\"children\", children);\n  const key = props?.key;\n  delete props?.key;\n  return vNode(vm, tag, key, props, children);\n}\n\n// _v()\nexport function createTextVNode(vm, text) {\n  return vNode(vm, undefined, undefined, undefined, undefined, text);\n}\n","import { createElementVNode, createTextVNode } from \"./vdom/index\";\n\nexport function mountComponent(vm, el) {\n  vm.$el = el;\n  // 1. 调用 render 方法产生虚拟节点 虚拟 DOM\n  vm._update(vm._render()); // vm.$options.render() 虚拟节点\n  // 2. 根据虚拟 DOM 产生真是 DOM\n  // 3. 插入到 el 元素中\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._c = function () {\n    console.log(\"调用了 _c\");\n    return createElementVNode(this, ...arguments);\n  };\n\n  Vue.prototype._v = function () {\n    console.log(\"调用了 _v\");\n    return createTextVNode(this, ...arguments);\n  };\n\n  Vue.prototype._s = function (value) {\n    console.log(\"调用了 _s\");\n    if (typeof value !== \"object\") {\n      return value;\n    }\n    return JSON.stringify(value);\n  };\n\n  Vue.prototype._update = function (vNode) {\n    console.log(\"_update\");\n    const vm = this;\n    const el = vm.$el;\n    // patch 既有初始化的功能，又有更新的公共功能\n    // 创建或者更新完毕后，返回的节点赋值给实例上，更新实例上的节点\n    vm.$el = patch(el, vNode);\n  };\n\n  Vue.prototype._render = function () {\n    console.log(\"_render\");\n    const vm = this;\n    return vm.$options.render.call(vm); // 通过 ast 语法转义后生成的 render 方法\n  };\n}\n\nfunction patchProps(el, props) {\n  for (const key in props) {\n    if (key === \"style\") {\n      for (const styleName in props.style) {\n        el.style[styleName] = props.style[styleName];\n      }\n    } else {\n      el.setAttribute(key, props[key]);\n    }\n  }\n}\n\nfunction createElm(vNode) {\n  const { tag, children = [], data, text } = vNode;\n  if (typeof tag === \"string\") {\n    // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n    vNode.el = document.createElement(tag);\n\n    // 更新属性\n    patchProps(vNode.el, data);\n    children.forEach((child) => {\n      const childElm = createElm(child);\n      vNode.el.appendChild(childElm);\n    });\n  } else {\n    vNode.el = document.createTextNode(text);\n  }\n  return vNode.el;\n}\n\nfunction patch(oldVNode, vNode) {\n  // 写的是初渲染流程\n  const isRealElement = oldVNode.nodeType;\n  if (isRealElement) {\n    const elm = oldVNode; // 获取真实元素\n    const parentElm = elm.parentNode; // 获取父元素\n    const newElm = createElm(vNode);\n    parentElm.insertBefore(newElm, elm.nextSibling);\n    // 移除老节点\n    parentElm.removeChild(elm);\n    return newElm;\n  } else {\n    console.log(\"TODO diff 算法\");\n  }\n}\n","import { initState } from \"./state\";\nimport { compileToFunction } from \"./compiler/index\";\nimport { mountComponent } from \"./lifecycle\";\n\nexport function initMixin(Vue) {\n  // 就是给 vue 增加 init 方法的\n  Vue.prototype._init = function (options) {\n    // 用户初始化操作\n    // vue vm.$options 就是获取用户的配置项\n\n    const vm = this;\n\n    vm.$options = options; // 将用户的选项挂在在实例上\n\n    // 初始化状态\n    initState(vm);\n\n    //\n    if (options.el) {\n      vm.$mount(options.el); // 实现数据的挂在\n    }\n  };\n\n  // 挂载\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    el = document.querySelector(el);\n    const ops = vm.$options;\n    if (!ops.render) {\n      let template;\n      // 先进行查找是否有 render 函数，\n      // 没有 render 函数看一下是否写了 template 没有写 template 就用外部的 template\n      if (!ops.template && el) {\n        // 没有写模板，但是写了 el\n        template = el.outerHTML;\n      } else {\n        if (el) {\n          template = ops.template;\n        }\n      }\n      // console.log(template);\n      if (template) {\n        // 这里需要对模板进行编译\n        ops.render = compileToFunction(template); // jsx 最终也会被被编译成 h('xxx')\n      }\n    }\n    // 最终可以获取到 render 方法\n    // console.log(ops.render);\n    mountComponent(vm, el); // 组件的挂载\n  };\n}\n\n// script 标签使用的是 vue.global.js 这个编译过程是在浏览器中进行的\n// runtime 是不包含模板编译的，整个编译打包的过程是通过 loader 来转义 .vue 文件的，\n// 用runtime时候不能使用 template\n","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\n\nfunction Vue(options) {\n  // options 就是用户的选项\n  this._init(options);\n}\n\ninitMixin(Vue);\ninitLifeCycle(Vue);\n\nexport default Vue;\n"],"names":["originArrayProto","Array","prototype","newArrayProto","Object","create","arrayMethods","forEach","method","_originArrayProto$met","_len","arguments","length","args","_key","result","call","apply","concat","console","log","inserted","slice","observe","Observer","data","_classCallCheck","defineProperty","value","configurable","isArray","__proto__","observeArray","walk","_createClass","key","item","keys","defineReactive","target","get","set","newValue","_typeof","__ob__","initState","vm","opts","$options","initData","_data","proxy","val","unicodeRegExp","attribute","ncname","source","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","defaultTagRE","ELEMENT_TYPE","TEXT_TYPE","parseHtml","html","stack","currentParent","root","createAstElement","tag","attrs","type","children","parent","start","node","push","end","pop","error","chars","text","replace","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","trim","JSON","stringify","len","genChild","codegen","nodeText","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","Function","vNode","createElementVNode","props","undefined","createTextVNode","mountComponent","el","$el","_update","_render","initLifeCycle","Vue","_c","_v","_s","patch","render","patchProps","styleName","style","setAttribute","createElm","_vNode$children","document","createElement","childElm","appendChild","createTextNode","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}